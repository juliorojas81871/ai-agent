import { writeFileSync, mkdirSync, existsSync } from 'fs';
import { join } from 'path';

interface ScriptOptions {
  name: string;
  description: string;
  type: 'typescript' | 'javascript';
  directory?: string;
}

export async function generateScript(options: ScriptOptions) {
  const { name, description, type, directory = 'tools' } = options;
  
  // Ensure the directory exists
  if (!existsSync(directory)) {
    mkdirSync(directory, { recursive: true });
  }

  const fileExtension = type === 'typescript' ? 'ts' : 'js';
  const filePath = join(directory, `${name}.${fileExtension}`);

  const template = `/**
 * ${description}
 * Generated by script generator
 */

import { NextResponse } from 'next/server';

export async function ${name}() {
  try {
    // Your script logic here
    
    return NextResponse.json({ success: true });
  } catch (error) {
    console.error('Error in ${name}:', error);
    return NextResponse.json(
      { error: 'An error occurred' },
      { status: 500 }
    );
  }
}
`;

  writeFileSync(filePath, template);
  console.log(`Script generated successfully at: ${filePath}`);
}

// Example usage:
// generateScript({
//   name: 'myNewScript',
//   description: 'This is a new script that does something amazing',
//   type: 'typescript'
// }); 